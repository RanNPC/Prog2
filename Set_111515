// Set -- Parse tree node strategy for printing the special form set!

using System;

namespace Tree
{
    public class Set : Special
    {
	public Set() { }
	
        public override void print(Node t, int n, bool p)
        {
            Printer.printSet(t, n, p);
        }

        public  override  Node eval (Tree.Cons exp, Tree.Environment env)
        {

            /*if `exp' is of the form `(set! x e)',
			evaluate e, let's call the result e1
			lookup x in the environment (not just in the current scope)
			if a binding for x exists already, store e1 as the new value,
			if no binding for x exists, this is an error and the
			behavior of set! is undefined
			*/
            Node id = exp.getCdr().getCar();
            Node val = exp.getCdr().getCdr().getCar();
			//Node ey = exp.getCdr().eval(env);
			env.assign(id, val.eval(env));
		    return Nil.getInstance();          
        }
    }
}

